FROM node:22.14.0-alpine AS base

# ------------------------
# 1) Dependencies stage
# ------------------------
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

COPY package.json pnpm-lock.yaml* ./
RUN corepack enable pnpm && pnpm install --frozen-lockfile

# ------------------------
# 2) Build stage
# ------------------------
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

ARG NEXT_PUBLIC_API_URL
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
ENV NEXT_TELEMETRY_DISABLED=1
ENV NEXT_OUTPUT_STANDALONE=true

RUN corepack enable pnpm && \
  pnpm run build

# ------------------------
# 3) Production stage
# ------------------------
FROM base AS runner
WORKDIR /app
ENV NODE_ENV=production

# 필수 도구 설치 및 비root 사용자 생성
RUN apk add --no-cache curl
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# 필요한 디렉토리 생성
RUN mkdir -p /app/.next/cache/images && \
  mkdir -p /app/.next/server && \
  mkdir -p /app/tmp && \
  chown -R nextjs:nodejs /app

# 빌드 결과물 복사
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/.next/server ./.next/server

USER nextjs

EXPOSE 3000

ENV HOSTNAME="0.0.0.0"
CMD ["node", "server.js"]
